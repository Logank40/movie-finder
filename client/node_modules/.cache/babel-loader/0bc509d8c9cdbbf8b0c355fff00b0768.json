{"ast":null,"code":"var _jsxFileName = \"/Users/glennkramsky/Desktop/movie-finder/client/src/pages/search.js\";\nimport React, { Component } from 'react';\nimport Jumbotron from '../components/jumbotron.js';\nimport Row from '../components/row.js';\nimport Col from '../components/col.js';\nimport Card from '../components/card.js';\nimport { searchOmdbMovies, saveMovie, removeMovie, getSavedMovies } from '../utils/API';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      movieList: [],\n      savedMovieIds: []\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      searchOmdbMovies(this.state.searchTerm).then(({\n        data: {\n          items: movieList\n        }\n      }) => {\n        const movieListCleaned = movieList.map(movie => {\n          // return {\n          //   movieId: movie.imdbID,\n          //   title: movie.Title,\n          //   actors: movie.Actors,\n          //   plot: movie.Plot,\n          //   image: movie.Poster ? movie.Poster : \"\"\n          // }\n          console.log(movie);\n        });\n        return this.setState({\n          movieList: movieListCleaned\n        });\n      }).then(this.retrieveSavedMovies).catch(err => console.log(err));\n    };\n\n    this.handleSaveMovie = movieId => {\n      const movie = this.state.movieList.find(movie => movie.movieId === movieId);\n      saveMovie(movie).then(() => {\n        const savedMovieIds = [...this.state.savedMovieIds, movieId];\n        this.setState({\n          savedMovieIds\n        });\n      });\n    };\n\n    this.retrieveSavedMovies = () => {\n      getSavedMovies().then(({\n        data: dbSavedMovies\n      }) => {\n        const savedMovieIds = dbSavedMovies.map(({\n          movieId\n        }) => movieId);\n        this.setState({\n          savedMovieIds\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      fluid: true,\n      bg: 'dark',\n      color: 'light',\n      pageTitle: 'Search For Movies',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Search for a movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search for a movie\",\n      onChange: this.handleInputChange,\n      value: this.state.searchTerm,\n      name: \"searchTerm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Search For Movies\")))), React.createElement(Col, {\n      xs: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, !this.state.movieList.length ? \"\" : this.state.movieList.map(movie => {\n      return React.createElement(Col, {\n        key: movie.id,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: movie.title,\n        image: movie.image ? movie.image : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, movie.description), React.createElement(\"button\", {\n        disabled: this.state.savedMovieIds.includes(movie.movieId) ? true : undefined,\n        onClick: () => this.handleSaveMovie(movie.movieId),\n        className: \"btn btn-success btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Save Movie\")));\n    }))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/glennkramsky/Desktop/movie-finder/client/src/pages/search.js"],"names":["React","Component","Jumbotron","Row","Col","Card","searchOmdbMovies","saveMovie","removeMovie","getSavedMovies","Search","state","searchTerm","movieList","savedMovieIds","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","then","data","items","movieListCleaned","map","movie","console","log","retrieveSavedMovies","catch","err","handleSaveMovie","movieId","find","dbSavedMovies","render","length","id","title","image","undefined","description","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Jumbotron from '../components/jumbotron.js';\nimport Row from '../components/row.js';\nimport Col from '../components/col.js';\nimport Card from '../components/card.js';\nimport { searchOmdbMovies, saveMovie, removeMovie, getSavedMovies } from '../utils/API';\n\nclass Search extends Component {\n  state = {\n    searchTerm: '',\n    movieList: [],\n    savedMovieIds: []\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    searchOmdbMovies(this.state.searchTerm)\n      .then(({ data: { items: movieList } }) => {\n        const movieListCleaned = movieList.map(movie => {\n          // return {\n          //   movieId: movie.imdbID,\n          //   title: movie.Title,\n          //   actors: movie.Actors,\n          //   plot: movie.Plot,\n          //   image: movie.Poster ? movie.Poster : \"\"\n          // }\n\n          console.log(movie);\n        })\n        return this.setState({ movieList: movieListCleaned });\n      })\n      .then(this.retrieveSavedMovies)\n      .catch(err => console.log(err));\n  };\n\n  handleSaveMovie = (movieId) => {\n    const movie = this.state.movieList.find(movie => movie.movieId === movieId);\n\n    saveMovie(movie)\n      .then(() => {\n        const savedMovieIds = [...this.state.savedMovieIds, movieId];\n        this.setState({ savedMovieIds })\n      })\n  }\n\n  retrieveSavedMovies = () => {\n    getSavedMovies()\n      .then(({data: dbSavedMovies}) => {\n        const savedMovieIds = dbSavedMovies.map(({movieId}) => movieId);\n        this.setState({savedMovieIds});\n      });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Jumbotron fluid bg={'dark'} color={'light'} pageTitle={'Search For Movies'} />\n        <div className=\"container-fluid\">\n          <Row>\n            <Col xs={12} md={4}>\n              <Card title=\"Search for a movie\">\n                <form onSubmit={this.handleFormSubmit}>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Search for a movie\" \n                  onChange={this.handleInputChange}\n                  value={this.state.searchTerm}\n                  name=\"searchTerm\"  \n                  />\n                  <button type=\"submit\" className=\"btn btn-block btn-dark\">Search For Movies</button>\n                </form>\n              </Card>\n            </Col>\n            <Col xs={12} md={8}>\n              <Row>\n                {\n                  !this.state.movieList.length ? \"\" : (\n                    this.state.movieList.map(movie => {\n                      return (\n                        <Col key={movie.id} md={6}>\n                          <Card title={movie.title} image={movie.image ? movie.image : undefined}>\n                            <p>\n                              {movie.description}\n                            </p>\n                            <button \n                              disabled={this.state.savedMovieIds.includes(movie.movieId) ? true : undefined}\n                              onClick={() => this.handleSaveMovie(movie.movieId)}\n                              className=\"btn btn-success btn-sm\">\n                              Save Movie\n                            </button>\n                          </Card>\n                        </Col>\n                      )\n                    })\n                  )\n                }\n              </Row>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}